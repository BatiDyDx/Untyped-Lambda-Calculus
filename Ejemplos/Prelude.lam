
-- identidad
def id = \x . x 

-- Booleanos
def true = \ t f . t
def false = \t f . f

def and = \a b. a b false
def or  = \a b. a true b
def not = \a. a false true

-- Pares
def pair = \x y p . p x y

def fst = \p . p true
def snd = \p . p false

-- Numerales de Church
def zero = \s z . z
def suc = \n s z . s (n s z)

def is0 = \n . n (\ x . false) true

def add = \n m s z . n s (m s z)
def mult = \n m s z . n (m s) z

def pred = \ n . fst (n (\p . pair (snd p) (suc (snd p))) (pair zero zero))
def minus = \n m . m pred n

--Operadores de comparacion de Numerales
def ge = \n m . is0 (minus m n)

def le = \n m . ge m n

def lt = \n m . not (ge n m)

def gt = \n m . lt m n

def eq = \n m . and (ge n m) (le n m)

def neq = not (eq n m)

--Listas
def nil = \c n . n
def cons = \x xs c n . c x (xs c n)

def isnil = \xs . xs (\x ys . false) true

-- Funciones sobre listas
def tail = \xs . fst (xs (\x r . pair (snd r) (cons x (snd r))) 
                          (pair nil nil)) 

def head = \xs . xs (\x y . x) bottom

-- Combinador de Punto Fijo
def Y = \f . (\x . f (x x)) (\x . f (x x))

-- factorial
def fact = Y (\f n. (is0 n) (suc zero) (mult n (f (pred n))))

-- bottom
def bottom = (\x . x x) (\x . x x)
